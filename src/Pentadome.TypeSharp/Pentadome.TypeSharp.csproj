<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netstandard2.0</TargetFramework>
        <IsPackable>false</IsPackable>

        <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
        <IsRoslynComponent>true</IsRoslynComponent>

        <RootNamespace>Pentadome.TypeSharp</RootNamespace>
        <PackageId>Pentadome.TypeSharp</PackageId>

        <GeneratePackageOnBuild>true</GeneratePackageOnBuild> <!-- Generates a package at build -->
        <IncludeBuildOutput>false</IncludeBuildOutput> <!-- Do not include the generator as a lib dependency -->
    </PropertyGroup>

    <ItemGroup>
        <!-- See: https://github.com/dotnet/roslyn/blob/main/docs/features/source-generators.cookbook.md#use-functionality-from-nuget-packages
         Take a private dependency on CSharpier.Core (PrivateAssets=all) Consumers of this generator will not reference it.
         Set GeneratePathProperty=true so we can reference the binaries via the PKGCSharpier_Core property-->
        <PackageReference Include="CSharpier.Core" PrivateAssets="all" GeneratePathProperty="true" />
        <PackageReference Include="Microsoft.CodeAnalysis.Analyzers">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp" />
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces"  />
        <PackageReference Include="Polyfill">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Roslynator.CSharp.Workspaces" />
    </ItemGroup>

    <ItemGroup>
      <!-- Because of the way the solution is build and despite the project having a reference to the attributes project,
           we can only use compile time constants like nameof(...) or constant variables. The attributes assembly is not accessible during runtime. -->
    <ProjectReference Include="..\Pentadome.TypeSharp.Attributes\Pentadome.TypeSharp.Attributes.csproj"  PrivateAssets="All" />
  </ItemGroup>

  <!-- See: https://andrewlock.net/creating-a-source-generator-part-8-solving-the-source-generator-marker-attribute-problem-part2/#4-pack-the-dll-into-the-generator-package -->
    <ItemGroup>
        <!-- Pack the generator dll in the analyzers/dotnet/cs path -->
        <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />

        <None Include="$(PkgCSharpier_Core)\lib\netstandard2.0\CSharpier.dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" CopyToPublishDirectory="Always" CopyToOutputDirectory="Always" />
        
        <!-- Pack the attributes dll in the analyzers/dotnet/cs path -->
        <None Include="$(OutputPath)\Pentadome.TypeSharp.Attributes.dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />

        <!-- Pack the attributes dll in the lib\netstandard2.0 path -->
        <None Include="$(OutputPath)\Pentadome.TypeSharp.Attributes.dll" Pack="true" PackagePath="lib\netstandard2.0" Visible="true" />
    </ItemGroup>


    <!-- set HUSKY to 0 in CI/CD disable this -->
    <Target Name="husky" BeforeTargets="Restore;CollectPackageReferences" Condition="'$(HUSKY)' != 0">
        <Exec Command="dotnet tool restore"  StandardOutputImportance="Low" StandardErrorImportance="High"/>
        <Exec Command="dotnet husky install" StandardOutputImportance="Low" StandardErrorImportance="High"  WorkingDirectory="$(SolutionDir)" />
       
    </Target>

    <PropertyGroup>
        <GetTargetPathDependsOn>$(GetTargetPathDependsOn);GetDependencyTargetPaths</GetTargetPathDependsOn>
    </PropertyGroup>

    <Target Name="GetDependencyTargetPaths" AfterTargets="ResolvePackageDependenciesForBuild">
        <Exec Command="echo $(ResolvedCompileFileDefinitions)" StandardOutputImportance="High"/>
        <ItemGroup>
            <TargetPathWithTargetPlatformMoniker Include="$(PkgCSharpier_Core)\lib\netstandard2.0\CSharpier.dll" IncludeRuntimeDependency="false" />
        </ItemGroup>
    </Target>
</Project>
